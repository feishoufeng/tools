<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dopakoala.douba.dao.IUserMoneyLogDao">
	<resultMap id="BaseResultMap" type="com.dopakoala.douba.entity.UserMoneyLog">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="uid" jdbcType="INTEGER" property="uid" />
		<result column="action" jdbcType="VARCHAR" property="action" />
		<result column="money" jdbcType="BIGINT" property="money" />
		<result column="leftmoney" jdbcType="BIGINT" property="leftmoney" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_user" jdbcType="INTEGER" property="createUser" />
		<result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="modify_account" jdbcType="INTEGER" property="modifyAccount" />
		<result column="date1" jdbcType="TIMESTAMP" property="date1" />
		<result column="date2" jdbcType="TIMESTAMP" property="date2" />
		<result column="page" jdbcType="INTEGER" property="page" />
		<result column="pagesize" jdbcType="INTEGER" property="pagesize" />
		<result column="sqlWhere" jdbcType="VARCHAR" property="sqlWhere" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="nickname" jdbcType="VARCHAR" property="nickname" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="num" jdbcType="INTEGER" property="num" />
	</resultMap>
	<sql id="Base_Column_List">
		id, uid, action, money, leftmoney, create_time,
		create_user, modify_time,
		modify_account,type
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_money_log
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAllByUid" parameterType="com.dopakoala.douba.entity.UserMoneyLog"
		resultMap="BaseResultMap">
		select l.*,u.mobile,u.nickname
		from user_money_log l
		left join
		user u on
		u.uid = l.uid
		where l.uid = #{uid,jdbcType=INTEGER}
		<if test="date1 != null and date2 != null">
			and l.create_time between #{date1,jdbcType=TIMESTAMP} and
			#{date2,jdbcType=TIMESTAMP}
		</if>
		<if test="sqlWhere != null">
			${sqlWhere}
		</if>
		order by
		l.create_time desc
		<if test="page > 0 || pagesize > 0">
			limit
			#{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER}
		</if>
	</select>
	<select id="selectAccountByUid" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select count(*) as num,ifnull(sum(money),0) as money,'发送红包'
		as action from
		hongbao
		where uid = #{uid,jdbcType=INTEGER} and status !=
		0
		union all
		select count(*) as num,ifnull(sum(money),0) as money,'红包退还'
		as action from hongbao
		where uid = #{uid,jdbcType=INTEGER} and
		return_status = 1 and status
		!= 0
		union all
		select count(*) as
		num,ifnull(sum(money),0) as money,'接收红包' as action from
		hongbao_log
		where uid = #{uid,jdbcType=INTEGER}
		union all
		select count(*)
		as
		num,ifnull(sum(money),0) as money,'购物' as action from orders
		where uid
		=
		#{uid,jdbcType=INTEGER} and pay_status = 1
		union all
		select count(*) as
		num,ifnull(sum(price),0) as money,'充值' as action from pay_log
		where uid
		=
		#{uid,jdbcType=INTEGER} and status = 1
		union all
		select count(*) as
		num,ifnull(sum(money),0) as money,'提现完成' as action from pay_tixian
		where uid =
		#{uid,jdbcType=INTEGER} and status = 1
		union all
		select
		count(*) as
		num,ifnull(sum(money),0) as money,'申请中的提现' as action from
		pay_tixian
		where uid =
		#{uid,jdbcType=INTEGER} and status = 0
		union all
		select 0 as
		num,ifnull(money,0) as money,'账户余额' as action from user
		where uid =
		#{uid,jdbcType=INTEGER}
		union all
		select 0 as
		num,ifnull(nocashmoney,0)
		as money,'账户专用余额' as action from user
		where
		uid = #{uid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		user_money_log
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insertSelective" parameterType="com.dopakoala.douba.entity.UserMoneyLog"
		useGeneratedKeys="true" keyProperty="id">
		insert into user_money_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="action != null">
				action,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="leftmoney != null">
				leftmoney,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
			<if test="modifyAccount != null">
				modify_account,
			</if>
			<if test="type != null">
				type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="action != null">
				#{action,jdbcType=VARCHAR},
			</if>
			<if test="money != null">
				#{money,jdbcType=BIGINT},
			</if>
			<if test="leftmoney != null">
				#{leftmoney,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=INTEGER},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyAccount != null">
				#{modifyAccount,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.dopakoala.douba.entity.UserMoneyLog">
		update user_money_log
		<set>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="action != null">
				action = #{action,jdbcType=VARCHAR},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=BIGINT},
			</if>
			<if test="leftmoney != null">
				leftmoney = #{leftmoney,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=INTEGER},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyAccount != null">
				modify_account = #{modifyAccount,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>