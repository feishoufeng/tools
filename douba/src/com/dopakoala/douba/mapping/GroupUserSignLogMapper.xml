<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dopakoala.douba.dao.IGroupUserSignLogDao">
	<resultMap id="BaseResultMap" type="com.dopakoala.douba.entity.GroupUserSignLog">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="gid" jdbcType="INTEGER" property="gid" />
		<result column="uid" jdbcType="INTEGER" property="uid" />
		<result column="runmiles" jdbcType="DECIMAL" property="runmiles" />
		<result column="pic" jdbcType="VARCHAR" property="pic" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_user" jdbcType="INTEGER" property="createUser" />
		<result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="modify_account" jdbcType="INTEGER" property="modifyAccount" />
		<result column="card_id" jdbcType="INTEGER" property="cardId" />
		<result column="sign_id" jdbcType="INTEGER" property="signId" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="period" jdbcType="INTEGER" property="period" />
		<result column="altitude" jdbcType="DECIMAL" property="altitude" />
		<result column="page" jdbcType="INTEGER" property="page" />
		<result column="pagesize" jdbcType="INTEGER" property="pagesize" />
		<result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
		<result column="endtime" jdbcType="TIMESTAMP" property="endtime" />
		<result column="nickname" jdbcType="VARCHAR" property="nickname" />
		<result column="avatar" jdbcType="VARCHAR" property="avatar" />
		<result column="rank" jdbcType="INTEGER" property="rank" />
		<result column="nowmiles" jdbcType="DECIMAL" property="nowmiles" />
		<result column="targetmiles" jdbcType="INTEGER" property="targetmiles" />
		<result column="thumbnail" jdbcType="VARCHAR" property="thumbnail" />
		<result column="revokemiles" jdbcType="DECIMAL" property="revokemiles" />
		<result column="count" jdbcType="INTEGER" property="count" />
	</resultMap>
	<sql id="Base_Column_List">
		id, gid, uid, runmiles, pic, create_time, create_user,
		modify_time,
		modify_account,
		card_id, sign_id, type, period,
		altitude,thumbnail,nowmiles
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from group_user_sign_log
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectStatisticByUid" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select ifnull(sum(runmiles),0) runmiles, count(*) count from
		group_user_sign_log where uid = #{uid,jdbcType=INTEGER}
	</select>
	<select id="selectByUidCardId" parameterType="com.dopakoala.douba.entity.GroupUserSignLog"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from group_user_sign_log
		where uid = #{uid,jdbcType=INTEGER}
		and card_id
		= #{cardId,jdbcType=INTEGER}
		order by create_time desc
		<if test="page > 0 || pagesize > 0">
			limit
			#{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER}
		</if>
	</select>
	<select id="selectTotalByCardId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select sum(runmiles) as runmiles,card_id
		from
		group_user_sign_log
		where card_id = #{cardId,jdbcType=INTEGER}
		group by
		card_id
	</select>
	<select id="selectListByGid" parameterType="com.dopakoala.douba.entity.GroupUserSignLog"
		resultMap="BaseResultMap">
		select l.*,gu.nickname as nickname,u.avatar as avatar
		from
		group_user_sign_log l
		left join
		group_user gu
		on gu.gid = l.gid and
		gu.status = 1
		left join user u on u.uid = gu.uid
		where l.card_id
		=
		(select
		id
		from
		group_card_sign
		where gid =
		#{gid,jdbcType=INTEGER}
		order by
		create_time
		desc limit 0,1)
		order by
		l.sign_id asc
		<if test="page > 0 || pagesize > 0">
			limit
			#{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER}
		</if>
	</select>
	<select id="selectListByCardId" parameterType="com.dopakoala.douba.entity.GroupUserSignLog"
		resultMap="BaseResultMap">
		select u.* from (select t.*,@rownum:=@rownum+1 AS rank
		from (select
		l.*,case when gu.realname is null then gu.nickname when gu.realname =
		'' then gu.nickname else gu.realname end as nickname,u.avatar as
		avatar,gus.targetmiles
		from
		group_user_sign_log
		l
		left join
		group_user gu
		on gu.gid = l.gid and
		gu.status = 1 and gu.uid =
		l.uid
		left
		join user u on
		u.uid = gu.uid
		left
		join group_user_sign gus
		on l.gid =
		gus.gid and l.uid
		= gus.uid
		where
		l.card_id =
		#{cardId,jdbcType=INTEGER}
		order by
		l.sign_id
		asc
		) t,(SELECT
		@rownum:=0)
		r) u
		order by u.rank asc
		<if test="page > 0 || pagesize > 0">
			limit
			#{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER}
		</if>
	</select>
	<select id="selectByCardIdUid" parameterType="com.dopakoala.douba.entity.GroupUserSignLog"
		resultMap="BaseResultMap">
		select * from(select t.*,@rownum:=@rownum+1 AS rank from (
		select * from group_user_sign_log
		where card_id =
		#{cardId,jdbcType=INTEGER} order by sign_id asc) t,(SELECT
		@rownum:=0)r)u where
		u.uid = #{uid,jdbcType=INTEGER}
		order by u.rank
		desc limit 0,1
	</select>
	<select id="selectListByUidGidSE" parameterType="com.dopakoala.douba.entity.GroupUserSignLog"
		resultMap="BaseResultMap">
		select l.*,gu.nickname as nickname,u.avatar as avatar
		from
		group_user_sign_log l
		left join
		group_user gu
		on gu.gid = l.gid and
		gu.status = 1
		left join user u on u.uid = gu.uid
		where l.gid =
		#{gid,jdbcType=INTEGER}
		and l.uid =
		#{uid,jdbcType=INTEGER}
		and
		l.create_time between
		#{starttime,jdbcType=TIMESTAMP} and
		#{endtime,jdbcType=TIMESTAMP}
		order by
		l.create_time asc
		<if test="page > 0 || pagesize > 0">
			limit
			#{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER}
		</if>
	</select>
	<select id="selectLastedLogByGid" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select *
		from group_user_sign_log
		where gid =
		#{gid,jdbcType=INTEGER}
		order by
		create_time desc limit 0,1
	</select>
	<select id="selectLastedLogByUidGid" parameterType="com.dopakoala.douba.entity.GroupUserSignLog"
		resultMap="BaseResultMap">
		select *
		from group_user_sign_log
		where uid =
		#{uid,jdbcType=INTEGER}
		and gid = #{gid,jdbcType=INTEGER}
		order by
		create_time desc limit 0,1
	</select>
	<select id="selectLastedLogByUid" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select *
		from group_user_sign_log
		where uid =
		#{uid,jdbcType=INTEGER}
		order by
		create_time desc limit 0,1
	</select>
	<select id="selectTotalByGid" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select sum(runmiles) as runmiles
		from group_user_sign_log
		where gid = #{gid,jdbcType=INTEGER}
	</select>
	<select id="selectByCardidSignid" parameterType="com.dopakoala.douba.entity.GroupUserSignLog"
		resultMap="BaseResultMap">
		select *
		from group_user_sign_log
		where card_id =
		#{cardId,jdbcType=INTEGER} and
		sign_id > #{signId,jdbcType=INTEGER}
	</select>
	<select id="selectTotalByUid" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select sum(runmiles) as runmiles
		from group_user_sign_log
		where uid = #{uid,jdbcType=INTEGER}
		group by sign_id order by sign_id
		desc limit 0,1
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		group_user_sign_log
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insertSelective" parameterType="com.dopakoala.douba.entity.GroupUserSignLog"
		useGeneratedKeys="true" keyProperty="id">
		insert into group_user_sign_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="gid != null">
				gid,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="runmiles != null">
				runmiles,
			</if>
			<if test="pic != null">
				pic,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
			<if test="modifyAccount != null">
				modify_account,
			</if>
			<if test="cardId != null">
				card_id,
			</if>
			<if test="signId != null">
				sign_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="period != null">
				period,
			</if>
			<if test="altitude != null">
				altitude,
			</if>
			<if test="thumbnail != null">
				thumbnail,
			</if>
			<if test="nowmiles != null">
				nowmiles,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="gid != null">
				#{gid,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="runmiles != null">
				#{runmiles,jdbcType=DECIMAL},
			</if>
			<if test="pic != null">
				#{pic,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=INTEGER},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyAccount != null">
				#{modifyAccount,jdbcType=INTEGER},
			</if>
			<if test="cardId != null">
				#{cardId,jdbcType=INTEGER},
			</if>
			<if test="signId != null">
				#{signId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="period != null">
				#{period,jdbcType=INTEGER},
			</if>
			<if test="altitude != null">
				#{altitude,jdbcType=DECIMAL},
			</if>
			<if test="thumbnail != null">
				#{thumbnail,jdbcType=VARCHAR},
			</if>
			<if test="nowmiles != null">
				#{nowmiles,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<update id="updateByCardidSignid" parameterType="com.dopakoala.douba.entity.GroupUserSignLog">
		update
		group_user_sign_log
		set sign_id = sign_id - 1
		where card_id =
		#{cardId,jdbcType=INTEGER} and
		sign_id >
		#{signId,jdbcType=INTEGER}
	</update>
	<update id="updateByCardidSignidRevokemiles" parameterType="com.dopakoala.douba.entity.GroupUserSignLog">
		update
		group_user_sign_log
		set nowmiles = nowmiles -
		#{revokemiles,jdbcType=DECIMAL}
		where card_id =
		#{cardId,jdbcType=INTEGER} and
		sign_id >
		#{signId,jdbcType=INTEGER}
		and
		uid = #{uid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.dopakoala.douba.entity.GroupUserSignLog">
		update group_user_sign_log
		<set>
			<if test="gid != null">
				gid = #{gid,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="runmiles != null">
				runmiles = #{runmiles,jdbcType=DECIMAL},
			</if>
			<if test="pic != null">
				pic = #{pic,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=INTEGER},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyAccount != null">
				modify_account = #{modifyAccount,jdbcType=INTEGER},
			</if>
			<if test="cardId != null">
				card_id = #{cardId,jdbcType=INTEGER},
			</if>
			<if test="signId != null">
				sign_id = #{signId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="period != null">
				period = #{period,jdbcType=INTEGER},
			</if>
			<if test="altitude != null">
				altitude = #{altitude,jdbcType=DECIMAL},
			</if>
			<if test="thumbnail != null">
				thumbnail = #{thumbnail,jdbcType=VARCHAR},
			</if>
			<if test="nowmiles != null">
				nowmiles = #{nowmiles,jdbcType=DECIMAL},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>