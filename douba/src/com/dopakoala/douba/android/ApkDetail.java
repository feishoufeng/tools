package com.dopakoala.douba.android;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.*;

import com.dopakoala.douba.utils.ConvertUtils;
import com.dopakoala.douba.utils.ExceptionMsgUtil;

import net.sf.json.JSONObject;

/**
 *
 * @author Administrator
 */
public class ApkDetail extends JFrame {
	private static final long serialVersionUID = 1L;

	private List<String> pathList = new ArrayList<String>();
	private JTextArea jTextArea1;
	private String filePath;

	public static ApkDetail getInstance(String filePath) {
		return new ApkDetail(filePath);
	}

	public ApkDetail(String filePath) {
		this.filePath = filePath;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {
		jTextArea1 = new JTextArea();
		jTextArea1.setColumns(20);
		jTextArea1.setFont(new java.awt.Font("宋体", 0, 20));
		jTextArea1.setRows(5);

	}

	private void getList(File file) {
		if (file.isFile() && file.getName().endsWith(".apk")) {
			pathList.add(file.getPath());
		} else {
			File fileList[] = file.listFiles();
			for (File f : fileList) {
				try {
					getList(f);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					ExceptionMsgUtil.getInstance(this.getClass(), e);
				}
			}
		}
	}

	/**
	 * 获取指定文件大小
	 * 
	 * @param f
	 * @return
	 * @throws Exception
	 */
	private double getFileSize(File file) {
		FileInputStream fis = null;
		try {
			long size = 0;
			if (file.exists()) {
				fis = new FileInputStream(file);
				size = fis.available();
			} else {
				file.createNewFile();
			}
			return size / (double) (1024 * 1024);
		} catch (Exception e) {
			// TODO: handle exception
			ExceptionMsgUtil.getInstance(this.getClass(), e);
		} finally {
			try {
				fis.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				ExceptionMsgUtil.getInstance(this.getClass(), e);
			}
		}
		return 0;
	}

	public ApkInfo getApkInfo() {
		ApkInfo apkInfo = null;
		File f = new File(filePath);
		try {
			if (f.exists()) {
				getList(f);
				for (String path : pathList) {
					File file = new File(path);
					if (!file.exists()) {
						break;
					}
					apkInfo = ApkUtil.getApkInfo(file.getPath());
					apkInfo.setFileSize(ConvertUtils.parseDouble(getFileSize(file), "#.00"));
					apkInfo.setApkName(file.getName());
					apkInfo.setMD5(FileMD5.getFileMD5(filePath));
				}
			}
		} catch (Exception e) {
			ExceptionMsgUtil.getInstance(this.getClass(), e);
		}
		return apkInfo;
	}

	public static void main(String args[]) {
		ApkInfo apkInfo = ApkDetail.getInstance("D:/20161224.apk").getApkInfo();
		System.out.println(JSONObject.fromObject(apkInfo).toString());
	}
}
